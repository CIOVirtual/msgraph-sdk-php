<?php
/**
* Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
* 
* WindowsMalwareOverview File
* PHP version 7
*
* @category  Library
* @package   Microsoft.Graph
* @copyright © Microsoft Corporation. All rights reserved.
* @license   https://opensource.org/licenses/MIT MIT License
* @version   GIT: 1.4.0
* @link      https://graph.microsoft.io/
*/
namespace Microsoft\Graph\Beta\Model;
/**
* WindowsMalwareOverview class
*
* @category  Model
* @package   Microsoft.Graph
* @copyright © Microsoft Corporation. All rights reserved.
* @license   https://opensource.org/licenses/MIT MIT License
* @version   Release: 1.4.0
* @link      https://graph.microsoft.io/
*/
class WindowsMalwareOverview extends Entity
{
    /**
    * Gets the malwareDetectedDeviceCount
    *
    * @return int The malwareDetectedDeviceCount
    */
    public function getMalwareDetectedDeviceCount()
    {
        if (array_key_exists("malwareDetectedDeviceCount", $this->_propDict)) {
            return $this->_propDict["malwareDetectedDeviceCount"];
        } else {
            return null;
        }
    }

    /**
    * Sets the malwareDetectedDeviceCount
    *
    * @param int $val The value of the malwareDetectedDeviceCount
    *
    * @return WindowsMalwareOverview
    */
    public function setMalwareDetectedDeviceCount($val)
    {
        $this->_propDict["malwareDetectedDeviceCount"] = $val;
        return $this;
    }

    /**
    * Gets the malwareStateSummary
    *
    * @return WindowsMalwareStateCount The malwareStateSummary
    */
    public function getMalwareStateSummary()
    {
        if (array_key_exists("malwareStateSummary", $this->_propDict)) {
            if (is_a($this->_propDict["malwareStateSummary"], "Microsoft\Graph\Beta\Model\WindowsMalwareStateCount")) {
                return $this->_propDict["malwareStateSummary"];
            } else {
                $this->_propDict["malwareStateSummary"] = new WindowsMalwareStateCount($this->_propDict["malwareStateSummary"]);
                return $this->_propDict["malwareStateSummary"];
            }
        }
        return null;
    }

    /**
    * Sets the malwareStateSummary
    *
    * @param WindowsMalwareStateCount $val The value to assign to the malwareStateSummary
    *
    * @return WindowsMalwareOverview The WindowsMalwareOverview
    */
    public function setMalwareStateSummary($val)
    {
        $this->_propDict["malwareStateSummary"] = $val;
         return $this;
    }

    /**
    * Gets the malwareExecutionStateSummary
    *
    * @return WindowsMalwareExecutionStateCount The malwareExecutionStateSummary
    */
    public function getMalwareExecutionStateSummary()
    {
        if (array_key_exists("malwareExecutionStateSummary", $this->_propDict)) {
            if (is_a($this->_propDict["malwareExecutionStateSummary"], "Microsoft\Graph\Beta\Model\WindowsMalwareExecutionStateCount")) {
                return $this->_propDict["malwareExecutionStateSummary"];
            } else {
                $this->_propDict["malwareExecutionStateSummary"] = new WindowsMalwareExecutionStateCount($this->_propDict["malwareExecutionStateSummary"]);
                return $this->_propDict["malwareExecutionStateSummary"];
            }
        }
        return null;
    }

    /**
    * Sets the malwareExecutionStateSummary
    *
    * @param WindowsMalwareExecutionStateCount $val The value to assign to the malwareExecutionStateSummary
    *
    * @return WindowsMalwareOverview The WindowsMalwareOverview
    */
    public function setMalwareExecutionStateSummary($val)
    {
        $this->_propDict["malwareExecutionStateSummary"] = $val;
         return $this;
    }

    /**
    * Gets the malwareCategorySummary
    *
    * @return WindowsMalwareCategoryCount The malwareCategorySummary
    */
    public function getMalwareCategorySummary()
    {
        if (array_key_exists("malwareCategorySummary", $this->_propDict)) {
            if (is_a($this->_propDict["malwareCategorySummary"], "Microsoft\Graph\Beta\Model\WindowsMalwareCategoryCount")) {
                return $this->_propDict["malwareCategorySummary"];
            } else {
                $this->_propDict["malwareCategorySummary"] = new WindowsMalwareCategoryCount($this->_propDict["malwareCategorySummary"]);
                return $this->_propDict["malwareCategorySummary"];
            }
        }
        return null;
    }

    /**
    * Sets the malwareCategorySummary
    *
    * @param WindowsMalwareCategoryCount $val The value to assign to the malwareCategorySummary
    *
    * @return WindowsMalwareOverview The WindowsMalwareOverview
    */
    public function setMalwareCategorySummary($val)
    {
        $this->_propDict["malwareCategorySummary"] = $val;
         return $this;
    }

    /**
    * Gets the malwareNameSummary
    *
    * @return WindowsMalwareNameCount The malwareNameSummary
    */
    public function getMalwareNameSummary()
    {
        if (array_key_exists("malwareNameSummary", $this->_propDict)) {
            if (is_a($this->_propDict["malwareNameSummary"], "Microsoft\Graph\Beta\Model\WindowsMalwareNameCount")) {
                return $this->_propDict["malwareNameSummary"];
            } else {
                $this->_propDict["malwareNameSummary"] = new WindowsMalwareNameCount($this->_propDict["malwareNameSummary"]);
                return $this->_propDict["malwareNameSummary"];
            }
        }
        return null;
    }

    /**
    * Sets the malwareNameSummary
    *
    * @param WindowsMalwareNameCount $val The value to assign to the malwareNameSummary
    *
    * @return WindowsMalwareOverview The WindowsMalwareOverview
    */
    public function setMalwareNameSummary($val)
    {
        $this->_propDict["malwareNameSummary"] = $val;
         return $this;
    }

    /**
    * Gets the osVersionsSummary
    *
    * @return OsVersionCount The osVersionsSummary
    */
    public function getOsVersionsSummary()
    {
        if (array_key_exists("osVersionsSummary", $this->_propDict)) {
            if (is_a($this->_propDict["osVersionsSummary"], "Microsoft\Graph\Beta\Model\OsVersionCount")) {
                return $this->_propDict["osVersionsSummary"];
            } else {
                $this->_propDict["osVersionsSummary"] = new OsVersionCount($this->_propDict["osVersionsSummary"]);
                return $this->_propDict["osVersionsSummary"];
            }
        }
        return null;
    }

    /**
    * Sets the osVersionsSummary
    *
    * @param OsVersionCount $val The value to assign to the osVersionsSummary
    *
    * @return WindowsMalwareOverview The WindowsMalwareOverview
    */
    public function setOsVersionsSummary($val)
    {
        $this->_propDict["osVersionsSummary"] = $val;
         return $this;
    }
}
